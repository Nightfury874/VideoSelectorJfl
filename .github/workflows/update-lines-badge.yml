name: Update Lines Badge

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC

jobs:
  update-badge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensures full history for accurate line counts

      - name: Set Up Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '16' # You can specify a different LTS version if needed

      - name: Install Dependencies
        run: |
          npm install badge-maker@3.0.0

      - name: Display Node.js Version
        run: |
          node -v

      - name: Display badge-maker Version
        run: |
          npm list badge-maker

      - name: Count Lines and Generate Badge
        run: |
          #!/bin/bash
          set -e  # Exit immediately if a command exits with a non-zero status

          # Define file extensions to include in the count
          EXTENSIONS=("*.js" "*.py" "*.java" "*.rb" "*.go" "*.cpp" "*.c" "*.ts" "*.jsx" "*.tsx" "*.php" "*.swift" "*.kt" "*.rs")

          # Initialize total lines
          TOTAL_LINES=0

          # Loop through each extension and count lines
          for EXT in "${EXTENSIONS[@]}"; do
            COUNT=$(find . -type f -name "$EXT" -not -path "./.git/*" | xargs wc -l 2>/dev/null | awk '{total += $1} END {print total}')
            TOTAL_LINES=$((TOTAL_LINES + COUNT))
          done

          echo "Total lines of code: $TOTAL_LINES"

          # Create a Node.js script to generate the badge with the correct TOTAL_LINES value
          cat <<EOF > generate_badge.js
          const badgeMaker = require('badge-maker');
          const bf = new badgeMaker.BadgeFactory();

          const format = {
            label: 'Lines',
            message: '${TOTAL_LINES}',
            color: 'blue',
          };

          const svg = bf.create(format);

          const fs = require('fs');
          fs.writeFileSync('badges/lines.svg', svg);
          EOF

          # Ensure the badges directory exists
          mkdir -p badges

          # Run the Node.js script to generate the badge
          node generate_badge.js

      - name: Display Badge Content
        run: |
          cat badges/lines.svg

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check if the badge has changed
          if git diff --exit-code badges/lines.svg; then
            echo "No changes to the badge."
          else
            git add badges/lines.svg
            git commit -m "Update lines badge [skip ci]"
            git push
          fi
